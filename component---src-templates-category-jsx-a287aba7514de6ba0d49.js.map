{"version":3,"sources":["webpack:///./src/templates/Category.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_PostPreview_PostPreview__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","Category","_ref","pageContext","data","category","a","createElement","pageTitle","title","allMarkdownRemark","edges","map","_ref2","node","key","id","image","frontmatter","childImageSharp","fluid","date","intro","excerpt","to","fields","slug"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAOaI,EAAK,YAiEHO,UApBE,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KACvBC,EAAaF,EAAbE,SAER,OACET,EAAAU,EAAAC,cAACT,EAAA,EAAD,CAAQU,UAAS,aAAeH,GAC9BT,EAAAU,EAAAC,cAACP,EAAA,EAAD,CAAKS,MAAK,cAAgBJ,IACzBD,EAAKM,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChClB,EAAAU,EAAAC,cAACR,EAAA,EAAD,CACEgB,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CX,MAAOK,EAAKI,YAAYT,MACxBY,KAAMP,EAAKI,YAAYG,KACvBC,MAAOR,EAAKS,QACZC,GAAE,UAAYV,EAAKW,OAAOC","file":"component---src-templates-category-jsx-a287aba7514de6ba0d49.js","sourcesContent":["import React from \"react\";\nimport { graphql } from 'gatsby';\nimport Layout from \"../components/Layout/Layout\";\nimport PostPreview from \"../components/PostPreview/PostPreview\";\nimport SEO from \"../components/seo\";\n\n\nexport const query = graphql`\n  query ($category: String) {\n    allMarkdownRemark (\n      filter: {\n        frontmatter: {\n          categories: {\n            in: [$category]\n          }\n        }\n      },\n      sort: {\n        fields: frontmatter___date\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          excerpt\n          frontmatter {\n            title\n            categories\n            image {\n              childImageSharp {\n                fluid {\n                  src\n                  srcSet\n                  tracedSVG\n                  aspectRatio\n                }\n              }\n            }\n            date (\n              formatString: \"MMM Do, YYYY\",\n            )\n          }\n        }\n      }\n    }\n  }\n`\n  \nconst Category = ({ pageContext, data }) => {\n  const { category } = pageContext;\n  \n  return (\n    <Layout pageTitle={`Category: ${category}`}>\n      <SEO title={`Category | ${category}`} />\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <PostPreview\n          key={node.id}\n          image={node.frontmatter.image.childImageSharp.fluid}\n          title={node.frontmatter.title}\n          date={node.frontmatter.date}\n          intro={node.excerpt}\n          to={`/posts/${node.fields.slug}`}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport default Category;\n"],"sourceRoot":""}